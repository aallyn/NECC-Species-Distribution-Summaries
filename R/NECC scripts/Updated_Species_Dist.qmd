---
title: "2024 NECC Analysis"
author: "cslovas"
format: 
  html:
    toc: true
    self-contained: true
editor: visual
---

```{r}
#| label: load data and dependecies
#| echo: false
#| message: false
#| warning: false

library(here)
library(tidyverse)
library(gmRi)
library(matrixStats)
library(broom)

species <- read_csv("/Users/clovas/Documents/Decadal_Variability/Data/species_list_final.csv") # more extensive species list

# Load NEFSC Bottom Trawl Survey data ####
trawl_data <- gmri_survdat_prep(
  survdat_source ="most recent",
  box_location ="cloudstorage")

clean_survey  <- trawl_data %>% 
  filter(est_year >= 1970) %>%
  distinct(svspp, est_year, survey_area, stratum, tow, id, est_towdate, season, comname, catchsex, .keep_all = T) %>%
  group_by(svspp, est_year, survey_area, stratum, tow, id, est_towdate, season, 
           avgdepth, surftemp, bottemp, decdeg_beglat, decdeg_beglon, comname, abundance) %>% 
  filter(comname %in% species$comname) %>% 
  summarise(biomass_kg = sum(biomass_kg, na.rm = T), .groups = "drop") %>%
  mutate(decade = 10*est_year %/% 10)

center_bio <- function(clean_survey, ...){
  clean_survey %>%
    group_by(comname, ...) %>%
    summarise(
      # Un-weighted averages
      total_biomass   = sum(biomass_kg),
      avg_biomass     = mean(biomass_kg),
      biomass_sd      = sd(biomass_kg),
      # All below are weighted by biomass
      avg_depth       = weightedMean(avgdepth, w = biomass_kg, na.rm = T),
      avg_bot_temp    = weightedMean(bottemp, w = biomass_kg, na.rm = T),
      avg_sur_temp    = weightedMean(surftemp, w = biomass_kg, na.rm = T),
      avg_lat         = weightedMean(decdeg_beglat, w = biomass_kg, na.rm = T),
      avg_lon         = weightedMean(decdeg_beglon, w = biomass_kg, na.rm = T),
      depth_sd        = weightedSd(avgdepth, w = biomass_kg, na.rm = T),
      temp_sd         = weightedSd(bottemp, w = biomass_kg, na.rm = T),
      lat_sd          = weightedSd(decdeg_beglat, w = biomass_kg, na.rm = T),
      lon_sd          = weightedSd(decdeg_beglon, w = biomass_kg, na.rm = T),
      .groups = "drop")
}


```

```{r}
#| label: center of gravity with season
#| echo: false
#| message: false
#| warning: false

with_season <- center_bio(clean_survey, est_year, season)

# run glm

with_season %>% 
  group_by(comname) %>% 
  nest() %>% 
  mutate(lat = map(data, function(x){lm(avg_lat ~ est_year, data = x) %>% 
                      tidy() %>% 
                      filter(term == "est_year")}),
         lon = map(data, function(x){lm(avg_lon ~ est_year, data = x) %>% 
                      tidy() %>% 
                      filter(term == "est_year")})) -> with_season

# isolate coefficients 
with_season %>% 
  select(!data) %>%
  pivot_longer(cols = lat:lon, names_to = "variable", values_to = "data") %>% 
  unnest(data) %>% 
  select(comname, variable, estimate, p.value) -> with_season_coeff
```

```{r}
#| label: center of gravity without season
#| echo: false
#| message: false
#| warning: false

without_season <- center_bio(clean_survey, est_year)

# run glm
without_season %>% 
  group_by(comname) %>% 
  nest() %>%
  mutate(lat = map(data, function(x){lm(avg_lat ~ est_year, data = x) %>% 
                      tidy() %>% 
                      filter(term == "est_year")}),
         lon = map(data, function(x){lm(avg_lon ~ est_year, data = x) %>% 
                      tidy() %>% 
                      filter(term == "est_year")})) -> without_season

# isolate coefficients 
without_season %>% 
  select(!data) %>%
  pivot_longer(cols = lat:lon, names_to = "variable", values_to = "data") %>% 
  unnest(data) %>% 
  select(comname, variable, estimate, p.value) -> without_season_coeff
```

```{r}
#| label: seasonal distance
#| echo: false
#| message: false
#| warning: false

# is the difference in spring and fall centers of biomass changing over time?
seasonal_dist <- with_season %>% 
  unnest(data) %>% 
  select(comname, est_year, season, avg_lat, avg_lon, avg_depth) %>% # maybe include depth changes later
  group_by(comname, est_year ) %>% 
  nest() 

point_dist <- function(df){
  temp <- sf::st_as_sf(df,coords=c("avg_lon","avg_lat"), crs=4326, remove=FALSE)
  out  <- sf::st_distance(temp)[1,2]
  return(out)
}

seasonal_dist %>% 
  mutate(dist    = map_dbl(data, possibly(point_dist, NA)),
         dist_km = dist/1000) %>% 
  group_by(comname) %>% 
  nest() %>% 
  mutate(count = map_dbl(data, function(x){nrow(x)}), 
         season_dist = map(data, function(x){lm(dist_km ~ est_year, data = x) %>% 
                          tidy() %>% 
                          filter(term == "est_year")})) %>% 
  unnest(season_dist) %>% 
  mutate(signif = ifelse(p.value <= 0.05, T, F)) -> seasonal_dist 

```

```{r}
#| label: figs
#| echo: false
#| message: false
#| warning: false
#| fig-width: 13
#| fig-height: 9
#| fig-align: center

# plotting rate of change in seasonal distance

seasonal_dist %>% 
  mutate(z = estimate > 0) %>% 
  ggplot()+
  geom_point(aes(x=comname, y=estimate, color=as.factor(z)))+
  ggrepel::geom_text_repel(aes(comname, estimate, label=comname), size=2.8, nudge_y=0.003)+
  theme_gmri(axis.text.x=element_blank(),
             axis.title.x=element_blank(),
             axis.ticks.x = element_blank(),
             axis.line.x = element_blank(),
             legend.position="none")+
  scale_color_gmri()+
  ylim(c(-4,4)) +
  geom_hline(yintercept = 0, linetype = 2, linewidth = 0.5, color = "black")+
  ylab("Rate of change (km/year)") + ggtitle("Changes in seasonal distance")

```