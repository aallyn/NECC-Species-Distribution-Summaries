---
title: "Overlap metrics"
format: 
  html:
    toc: true
    self-contained: true
editor: visual
---

```{r}
#| label: load libraries and dependencies
#| echo: false
#| message: false
#| warning: false

library(here)
library(tidyverse)
library(gmRi)
library(matrixStats)
library(sf)
library(lwgeom)
```

```{r}
#| label: overlap functions
#| echo: false

#### overlap functions to accompany Carroll et al. (2019) 'A review of methods for quantifying predator-prey overlap,' Global Ecology and Biogeography 
## please see accompanying paper for detailed descriptions of metrics and their ecological interpretations


## area overlap
## for binary data
## measures proportion of an area where two species co-occur
area_overlapfn <- function(prey, pred, area){
  total_area <- sum(area, na.rm = T)
  sum(area[pred > 0 & prey > 0], na.rm = T)/total_area
}

## range overlap
## for binary data
## measures the proportion of one species range where the other co-occurs
range_overlapfn<-function(prey, pred, area){
  area_prey <- sum(area[prey > 0], na.rm = T)
  sum(area[pred > 0 & prey > 0], na.rm = T)/area_prey
}

## local index of collocation
## estimates correlation of predator and prey densities
loc_collocfn <- function(prey, pred) {
  p_prey <- prey/sum(prey, na.rm = T)
  p_pred <- pred/sum(pred, na.rm = T)
  sum(p_prey*p_pred, na.rm = T)/(sqrt(sum(p_prey^2, na.rm = T)*sum(p_pred^2, na.rm = T)))
}

## asymmetrical alpha
## measures pressure of predator on prey relative to underlying prey density
asymmalpha_overlapfn <-function(prey, pred){
  p_prey <- prey/sum(prey, na.rm = T)
  p_pred <- pred/sum(pred, na.rm = T)
  sum(p_pred*p_prey, na.rm = T)/sum(p_prey^2, na.rm = T)
}

## biomass-weighted overlap (scaled to max)
## measures amount of predator biomass interacting with prey relative to underlying prey biomass
biomass_overlapfn <- function(prey, pred) {
  sum((prey/max(prey, na.rm = T)) * (pred/max(pred, na.rm = T)), na.rm = T)/sum(prey/max(prey, na.rm = T), na.rm = T)
}

## Hurlbert's overlap
## measures interspecific encounter rate between predator and prey
hurlbert_overlapfn <- function(prey, pred, area) {
  area_occupied <- sum(area[pred > 0 | prey > 0], na.rm = T)
  p_prey <- prey/sum(prey, na.rm = T)
  p_pred <- pred/sum(pred, na.rm = T)
  sum((p_pred*p_prey)/(area/area_occupied), na.rm = T)
}

## Schoener's D
## density or probability of occurrence data
## measures how equally predator and prey share available resources
schoeners_overlapfn <- function(prey, pred) {
  p_prey <- prey/sum(prey, na.rm = T)
  p_pred <- pred/sum(pred, na.rm = T)
  1 - 0.5 * (sum(abs(p_prey-p_pred), na.rm = T))
}

## Bhattacharyya's coefficient
## density or probability of occurrence data
## measures whether two species use space independently
bhatta_coeffn <- function(prey, pred) {
  p_prey <- prey/sum(prey, na.rm = T)
  p_pred <- pred/sum(pred, na.rm = T)
  sum(sqrt(p_prey*p_pred), na.rm = T)
}

## global index of collocation
## measures geographic distinctness by comparing centres of gravity and dispersion of sampled individuals
glob_collocfn <- function(prey_x, prey_y, prey, pred_x, pred_y, pred){
  prey_cgx <- sum(prey_x*prey, na.rm = T)/sum(prey, na.rm = T)
  prey_cgy <- sum(prey_y*prey, na.rm = T)/sum(prey, na.rm = T)
  prey_ix <- prey_x - prey_cgx
  prey_iy <- prey_y - prey_cgy
  prey_i <- sqrt(prey_ix^2 + prey_iy^2)
  prey_inert <- sum(prey * (prey_i^2), na.rm = T)/sum(prey, na.rm = T)
  pred_cgx <- sum(pred_x*pred, na.rm = T)/sum(pred, na.rm = T)
  pred_cgy <- sum(pred_y*pred, na.rm = T)/sum(pred, na.rm = T)
  pred_ix <- pred_x - pred_cgx
  pred_iy <- pred_y - pred_cgy
  pred_i <- sqrt(pred_ix^2 + pred_iy^2)
  pred_inert <- sum(pred * (pred_i^2), na.rm = T)/sum(pred, na.rm = T)
  GIC <- (((prey_cgx - pred_cgx)^2+(prey_cgy - pred_cgy)^2)/ (((prey_cgx-pred_cgx)^2+(prey_cgy-pred_cgy)^2)+prey_inert + pred_inert))
  if(!is.na(GIC))
    GIC <- 1-GIC
  else GIC <- 1
  GIC
}

## AB ratio
## measures predator production that can be attributed to spatial overlap with prey
AB_overlapfn <- function(prey, pred) { 
  mean((pred - mean(pred, na.rm = T)) * (prey - mean(prey, na.rm = T)), na.rm = T)/(mean(pred, na.rm = T) * mean(prey, na.rm = T)) 
}

```

```{r}
#| label: species data
#| echo: false
#| message: false

# species data
species <- read_csv("/Users/clovas/Documents/necc_distributions/Data/speciesList_inNECC.csv") %>%
  rename("comname" = "Species_comnam") %>%
  mutate(comname   = tolower(comname))
  # filter(NECC == "Y") %>%
  # select(comname)

# Load NEFSC Bottom Trawl Survey data ####
trawl_data <- gmri_survdat_prep(
  survdat_source ="most recent",
  box_location ="cloudstorage")

clean_survey  <- trawl_data %>% 
  distinct(svspp, est_year, survey_area, stratum, tow, id, est_towdate, season, comname, catchsex, .keep_all = T) %>%
  group_by(svspp, est_year, survey_area, stratum, tow, id, est_towdate, season, 
           avgdepth, surftemp, bottemp, decdeg_beglat, decdeg_beglon, comname, abundance) %>% 
  filter(comname %in% species$comname) %>% 
  summarise(biomass_kg = sum(biomass_kg, na.rm = T), .groups = "drop") %>%
  mutate(decade = 10*est_year %/% 10)

prey <- c("alewife", "atlantic herring", "northern sand lance", "longfin squid", "silver hake", "shortfin squid")

prey <- species %>% 
  filter(comname %in% prey) %>% 
  select(comname) %>% 
  mutate(guild = "prey")

pred <- species %>% 
  filter(NECC == "Y") %>% 
  filter(!comname %in% prey$comname) %>% 
  select(comname) %>%
  mutate(guild = "pred")

species_data <- pred %>% 
  full_join(prey) %>% 
  arrange(comname)

```

```{r}
#| label: spatial extent
#| echo: false
#| message: false

# grouped_center_bio <- function(clean_survey, ...){
#   clean_survey %>% 
#     group_by(comname, ...) %>% 
#     summarise(
#       # Un-weighted averages
#       total_biomass   = sum(biomass_kg),
#       avg_biomass     = mean(biomass_kg),
#       biomass_sd      = sd(biomass_kg),
#       # All below are weighted by biomass
#       avg_depth       = weightedMean(avgdepth, w = biomass_kg, na.rm = T),
#       avg_bot_temp    = weightedMean(bottemp, w = biomass_kg, na.rm = T),
#       avg_sur_temp    = weightedMean(surftemp, w = biomass_kg, na.rm = T),
#       avg_lat         = weightedMean(decdeg_beglat, w = biomass_kg, na.rm = T),
#       avg_lon         = weightedMean(decdeg_beglon, w = biomass_kg, na.rm = T),
#       depth_sd        = weightedSd(avgdepth, w = biomass_kg, na.rm = T),
#       temp_sd         = weightedSd(bottemp, w = biomass_kg, na.rm = T),
#       lat_sd          = weightedSd(decdeg_beglat, w = biomass_kg, na.rm = T),
#       lon_sd          = weightedSd(decdeg_beglon, w = biomass_kg, na.rm = T),
#       .groups = "drop") 
# }
# 
# weighted_bio <- grouped_center_bio(clean_survey, est_year)

# Turn off spherical geometry
# sf::sf_use_s2(FALSE)
# 
# weighted_bio %>% 
#   filter(comname %in% species_data$comname) %>% 
#   select(est_year, comname, avg_lat, avg_lon) %>% 
#   # mutate(decade = 10*est_year %/% 10) %>%
#   st_as_sf(coords = c("avg_lon","avg_lat"), crs = 4326)  %>%
#   group_by(comname) %>%
#   summarise(geometry = st_combine(geometry)) %>%
#   st_cast("POLYGON") -> spatial_data
  # mutate(area = st_buffer(geometry)) 
  # mutate(area = st_area(geometry),
         # area = str_remove(area, "[m^2]"), # remember area values are in m^2, convert to km^2 later
         # area = parse_number(area)) -> spatial_data

# species_data %>% 
#   full_join(spatial_data) -> species_data

# plot(spatial_data$geometry[[1]])
# plot(spatial_data$area[[1]])

```

```{r}
#| label: mapping overlap functions
#| echo: false

# csl: I'm thinking the "area" argument of the G.Carroll functions will require st_intersection() between predator and prey, not the area occupied by a particular species

# species_data %>% 
#   filter(guild == "prey") %>%
#   select(comname, geometry) %>% 
#   mutate(geometry = st_transform(geometry, "+proj=eqc")) %>% 
#   rename("prey" = "comname",
#          "prey_area" = "geometry") %>%
#   nest() -> prey
# 
# species_data %>% 
#   filter(guild == "pred") %>% 
#   select(comname, geometry) %>%
#   mutate(geometry = st_transform(geometry, "+proj=eqc")) %>% 
#   cbind(prey) %>% 
#   unnest(data) %>%
#   rename("pred" = "comname",
#          "pred_area" = "geometry") %>%
#   mutate(pred_area = st_make_valid(pred_area),
#          prey_area = st_make_valid(prey_area)) %>%
#   relocate(prey, .after = pred) -> overlap_area
# 
# overlap_area %>% 
#   group_by(pred, prey, pred_area, prey_area) %>%
#   # reframe(area = st_overlaps(pred_area, prey_area)) -> overlap_area
#   # reframe(area = st_intersection(pred_area, prey_area)) -> overlap_area
#   reframe(overlap = st_intersection(pred_area, prey_area),
#           area    = st_area(overlap)) %>%
#   mutate(area = str_remove(area, "[m^2]"), # remember area values are in m^2, convert to km^2 later
#          area = parse_number(area)) -> overlap_area
# 
# overlap_area %>% 
#   select(pred, prey, overlap) %>% 
#   mutate(overlap = st_transform(overlap, crs = 4326)) -> test

# plot(test$area[[6]]) maybe................

```

```{r}
#| label: trying over
#| echo: false

# Turn off spherical geometry
sf::sf_use_s2(FALSE)

clean_survey %>% 
  filter(comname %in% species_data$comname) %>% 
  select(est_year, comname, decdeg_beglat, decdeg_beglon) %>%
  rename("avg_lon" = "decdeg_beglon",
         "avg_lat" = "decdeg_beglat") %>%
  st_as_sf(coords = c("avg_lon","avg_lat"), crs = 4326) %>%
  group_by(comname) %>% 
  summarise(geometry = st_combine(geometry)) %>%
  # st_cast("POLYGON") %>% 
  mutate(area = st_area(geometry)) %>% 
  mutate(area = str_remove(area, "[m^2]"), # remember area values are in m^2, convert to km^2 later
         area = parse_number(area)) -> spatial_data

species_data %>% 
  full_join(spatial_data) -> species_data

species_data %>% 
  filter(guild == "prey") %>%
  select(comname, geometry) %>% 
  mutate(geometry = st_transform(geometry, "+proj=eqc")) %>% 
  rename("prey" = "comname",
         "prey_area" = "geometry") %>%
  nest() -> prey

species_data %>% 
  filter(guild == "pred") %>% 
  select(comname, geometry) %>%
  mutate(geometry = st_transform(geometry, "+proj=eqc")) %>% 
  cbind(prey) %>% 
  unnest(data) %>%
  rename("pred" = "comname",
         "pred_area" = "geometry") %>%
  mutate(pred_area = st_make_valid(pred_area),
         prey_area = st_make_valid(prey_area)) %>%
  relocate(prey, .after = pred) -> overlap_area

overlap_area %>% 
  mutate(pred_area = st_make_valid(pred_area),
         prey_area = st_make_valid(prey_area)) %>%
  group_by(pred, prey, pred_area, prey_area) %>%
  summarise(overlap = st_intersection(pred_area, prey_area)) -> overlap_area

overlap_area %>%
  filter(pred == "atlantic cod" & prey == "atlantic herring") %>%
  ggplot() +
  geom_sf(aes(geometry = prey_area), color = "lightblue") +
  geom_sf(aes(geometry = pred_area), color = "red") +
  geom_sf(aes(geometry = overlap), color = "purple", alpha = 0.5)
  # hmmm 

overlap_area %>% 
  mutate(overlap = st_cast(overlap, "POLYGON")) %>%
  group_by(pred, prey) %>% 
  reframe(overlap_area = st_area(overlap)) %>% 
  mutate(overlap_area = str_remove(overlap_area, "[m^2]"),
         overlap_area = parse_number(overlap_area),
         km_area = (overlap_area*.0000001)) # maybe do this by decade? change in overlap (+/-/0)

```

```{r}
#| label: same as above but by decade (yearly values too small)
#| echo: false

clean_survey %>% 
  filter(comname %in% species_data$comname) %>% 
  mutate(decade = 10*est_year %/% 10) %>%
  select(decade, comname, decdeg_beglat, decdeg_beglon) %>%
  rename("avg_lon" = "decdeg_beglon",
         "avg_lat" = "decdeg_beglat") %>%
  st_as_sf(coords = c("avg_lon","avg_lat"), crs = 4326) %>%
  group_by(comname, decade) %>% 
  summarise(geometry = st_combine(geometry)) -> spatial_data

species_data %>% 
  full_join(spatial_data) -> species_data

species_data %>% 
  filter(guild == "prey") %>%
  select(decade, comname, geometry) %>% 
  mutate(geometry = st_transform(geometry, "+proj=eqc")) %>% 
  rename("prey" = "comname",
         "prey_area" = "geometry") %>%
  group_by(decade) %>% 
  nest() -> prey

species_data %>% 
  filter(guild == "pred") %>% 
  select(decade, comname, geometry) %>%
  mutate(geometry = st_transform(geometry, "+proj=eqc")) %>% 
  left_join(prey) %>% 
  unnest(data) %>%
  rename("pred" = "comname",
         "pred_area" = "geometry") %>%
  mutate(pred_area = st_make_valid(pred_area),
         prey_area = st_make_valid(prey_area)) %>%
  relocate(prey, .after = pred) -> overlap_area

overlap_area %>% 
  mutate(pred_area = st_make_valid(pred_area),
         prey_area = st_make_valid(prey_area)) %>%
  group_by(decade, pred, prey) %>%
  mutate(overlap = st_intersection(pred_area, prey_area)) -> overlap_area

overlap_area %>%
  filter(pred == "atlantic cod" & prey == "atlantic herring") %>%
  ggplot() +
  geom_sf(aes(geometry = prey_area), color = "lightblue") +
  geom_sf(aes(geometry = pred_area), color = "red") +
  geom_sf(aes(geometry = overlap), color = "purple", alpha = 0.5) +
  facet_wrap(~decade)

overlap_area %>% 
  filter(!(pred == "smooth dogfish" & prey == "atlantic herring") & !(pred == "bluefish" & prey == "northern sand lance")) %>%
  mutate(overlap = st_cast(overlap, "POLYGON", do_split = FALSE)) %>% # dogfish/herring and bluefish/sand lance causing issues
  group_by(decade, pred, prey) %>% 
  reframe(overlap_area = st_area(overlap)) %>% 
  mutate(overlap_area = str_remove(overlap_area, "[m^2]"),
         overlap_area = parse_number(overlap_area),
         km_area = (overlap_area*.0000001)) -> pred_prey_overlap



```

