---
title: "Seasonal migration changes"
format: 
  html:
    toc: true
    self-contained: true
editor: visual
---

## Changes in fall and spring centers of biomass 
To narrow down the potential list of species interactions, I'm pulling out a number of species whose distance between their fall and spring centers of biomass have changed significantly (*p value* <= 0.05). This has narrowed our list of 29 predatory species down to 8. Some have increased their distance between centers and some have decreased. We will classify these species with their movement classifications, examine how prey species are moving, and assess whether those patterns are consistent with the previously hypothesized overlap patterns. 

```{r}
#| label: load libraries and dependencies
#| echo: false
#| message: false
#| warning: false

library(here)
library(tidyverse)
library(gmRi)
library(matrixStats)

# species data
species <- read_csv("/Users/clovas/Documents/necc_distributions/Data/speciesList_inNECC.csv") %>%
  rename("comname" = "Species_comnam") %>%
  mutate(comname   = tolower(comname)) %>%
  filter(NECC == "Y") %>%
  select(comname)

# Load NEFSC Bottom Trawl Survey data ####
trawl_data <- gmri_survdat_prep(
  survdat_source ="most recent",
  box_location ="cloudstorage")

clean_survey  <- trawl_data %>% 
  distinct(svspp, est_year, survey_area, stratum, tow, id, est_towdate, season, comname, catchsex, .keep_all = T) %>%
  group_by(svspp, est_year, survey_area, stratum, tow, id, est_towdate, season, 
           avgdepth, surftemp, bottemp, decdeg_beglat, decdeg_beglon, comname, abundance) %>% 
  filter(comname %in% species$comname) %>% 
  summarise(biomass_kg = sum(biomass_kg, na.rm = T), .groups = "drop") %>%
  mutate(decade = 10*est_year %/% 10)
```

```{r}
#| label: center of gravity
#| echo: false
#| warning: false
#| message: false

grouped_center_bio <- function(clean_survey, ...){
  clean_survey %>%
    group_by(comname, ...) %>%
    summarise(
      # Un-weighted averages
      total_biomass   = sum(biomass_kg),
      avg_biomass     = mean(biomass_kg),
      biomass_sd      = sd(biomass_kg),
      # All below are weighted by biomass
      avg_depth       = weightedMean(avgdepth, w = biomass_kg, na.rm = T),
      avg_bot_temp    = weightedMean(bottemp, w = biomass_kg, na.rm = T),
      avg_sur_temp    = weightedMean(surftemp, w = biomass_kg, na.rm = T),
      avg_lat         = weightedMean(decdeg_beglat, w = biomass_kg, na.rm = T),
      avg_lon         = weightedMean(decdeg_beglon, w = biomass_kg, na.rm = T),
      depth_sd        = weightedSd(avgdepth, w = biomass_kg, na.rm = T),
      temp_sd         = weightedSd(bottemp, w = biomass_kg, na.rm = T),
      lat_sd          = weightedSd(decdeg_beglat, w = biomass_kg, na.rm = T),
      lon_sd          = weightedSd(decdeg_beglon, w = biomass_kg, na.rm = T),
      .groups = "drop")
}

weighted_data <- grouped_center_bio(clean_survey, est_year, season)

centerBio_lm <- weighted_data %>%
  group_by(comname, season) %>%
  nest() %>%
  mutate(lat_mod    = map(data, function(x){lm(avg_lat ~ est_year, data = x)}),
         lon_mod    = map(data, function(x){lm(avg_lon ~ est_year, data = x)}),
         tidy_lat   = map(lat_mod, broom::tidy),
         tidy_lon   = map(lon_mod, broom::tidy),
         glance_lat = map(lat_mod, broom::glance),
         glance_lon = map(lon_mod, broom::glance),
         slope_lat  = tidy_lat %>% map_dbl(function(x) x$estimate[2]),
         slope_lon  = tidy_lon %>% map_dbl(function(x) x$estimate[2]),
         p_lat      = glance_lat %>% map_dbl("p.value"),
         p_lon      = glance_lon %>% map_dbl("p.value"))


```

```{r}
#| label: seasonal distance
#| echo: false
#| message: false
#| warning: false

library(sf)

# Turn of spherical geometry
sf::sf_use_s2(FALSE)

point_dist <- function(df){
  if(FALSE){
    df<-season_dist$data[[201]]
  }
  temp <- st_as_sf(df,coords=c("avg_lon","avg_lat"), crs=4326, remove=FALSE)
  out <-  st_distance(temp)[1,2]
  return(out)
}

season_dist <- centerBio_lm %>%
  unnest(data) %>%
  select(comname, season, est_year, avg_lat, avg_lon)%>%
  group_by(comname, est_year)%>%
  nest() %>%
  mutate(dist    = map_dbl(data, possibly(point_dist, NA)),
         dist_km = (dist/1000)) %>%
  group_by(comname) %>% 
  nest() %>%
  mutate(dist_lm = map(data, function(x){
    lm(dist_km ~ est_year, data = x) %>% 
      broom::tidy() %>% 
      filter(!term == "(Intercept)") %>%
      select(
        term,
        estimate,
        p.value) %>% 
      mutate(signif = ifelse(p.value <= 0.05, T, F))
  })) %>%
  unnest(dist_lm)


signif_dist <- season_dist %>% 
  filter(signif == "TRUE")

```


```{r}
#| label: plots 
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| fig-width: 13
#| fig-height: 12

library(rnaturalearth)

maps <- centerBio_lm %>% 
  filter(comname %in% signif_dist$comname) %>%
  select(comname, season, data) %>% 
  unnest(data) %>% 
  mutate(decade = 10*est_year %/% 10) %>% 
  group_by(comname) %>% 
  nest() %>% 
  mutate(plot = map(data, function(x,y){
    world <- ne_countries(returnclass = "sf")
    out <- ggplot(data = world) +
      geom_sf()+
      coord_sf(xlim = c(-78,-66), ylim = c(37, 47)) + 
      geom_point(data = x, aes(x = avg_lon, y = avg_lat, color = season)) +
      guides(color = guide_legend(title = "Season")) +
      scale_color_manual(values = c("lightblue", "#EA4F12")) +
      scale_y_continuous(breaks = c(38, 42, 46)) +
      scale_x_continuous(breaks = c(-74, -68)) +
      facet_wrap(~decade, nrow = 1) +
      ggtitle(str_to_sentence(comname)) +
      xlab("Longitude") + ylab("Latitude") +
      theme_gmri(strip.background = element_rect(fill = "transparent", color = "black", linewidth = 0.7),
             strip.text = element_text(color = "black"),
             legend.title = element_text(size = 10, face = "bold"),
             legend.text = element_text(size = 10),
             panel.border = element_rect(color = "black", linetype = 1, linewidth = 0.5))
  }))
 
gridExtra::marrangeGrob(maps$plot, layout_matrix = matrix(1:2, ncol = 1, nrow = 2, byrow= TRUE), top = NULL)
```

