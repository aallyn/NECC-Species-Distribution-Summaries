---
title: "Seasonal migration changes"
format: 
  html:
    toc: true
    self-contained: true
editor: visual
---

## Changes in fall and spring centers of biomass

To narrow down the potential list of species interactions, I'm pulling out a number of species whose distance between their fall and spring centers of biomass have changed significantly (*p value* \<= 0.05). This has narrowed our list of 29 predatory species down to 8. Some have increased their distance between centers and some have decreased. We will classify these species with their movement classifications, examine how prey species are moving, and assess whether those patterns are consistent with the previously hypothesized overlap patterns.

```{r}
#| label: load libraries and dependencies
#| echo: false
#| message: false
#| warning: false

library(here)
library(tidyverse)
library(gmRi)
library(matrixStats)

# species data
species <- read_csv("/Users/clovas/Documents/necc_distributions/Data/speciesList_inNECC.csv") %>%
  rename("comname" = "Species_comnam") %>%
  mutate(comname   = tolower(comname)) %>%
  filter(NECC == "Y") %>%
  select(comname)

# Load NEFSC Bottom Trawl Survey data ####
trawl_data <- gmri_survdat_prep(
  survdat_source ="most recent",
  box_location ="cloudstorage")

clean_survey  <- trawl_data %>% 
  distinct(svspp, est_year, survey_area, stratum, tow, id, est_towdate, season, comname, catchsex, .keep_all = T) %>%
  group_by(svspp, est_year, survey_area, stratum, tow, id, est_towdate, season, 
           avgdepth, surftemp, bottemp, decdeg_beglat, decdeg_beglon, comname, abundance) %>% 
  filter(comname %in% species$comname) %>% 
  summarise(biomass_kg = sum(biomass_kg, na.rm = T), .groups = "drop") %>%
  mutate(decade = 10*est_year %/% 10)
```

```{r}
#| label: center of gravity
#| echo: false
#| warning: false
#| message: false

grouped_center_bio <- function(clean_survey, ...){
  clean_survey %>%
    group_by(comname, ...) %>%
    summarise(
      # Un-weighted averages
      total_biomass   = sum(biomass_kg),
      avg_biomass     = mean(biomass_kg),
      biomass_sd      = sd(biomass_kg),
      # All below are weighted by biomass
      avg_depth       = weightedMean(avgdepth, w = biomass_kg, na.rm = T),
      avg_bot_temp    = weightedMean(bottemp, w = biomass_kg, na.rm = T),
      avg_sur_temp    = weightedMean(surftemp, w = biomass_kg, na.rm = T),
      avg_lat         = weightedMean(decdeg_beglat, w = biomass_kg, na.rm = T),
      avg_lon         = weightedMean(decdeg_beglon, w = biomass_kg, na.rm = T),
      depth_sd        = weightedSd(avgdepth, w = biomass_kg, na.rm = T),
      temp_sd         = weightedSd(bottemp, w = biomass_kg, na.rm = T),
      lat_sd          = weightedSd(decdeg_beglat, w = biomass_kg, na.rm = T),
      lon_sd          = weightedSd(decdeg_beglon, w = biomass_kg, na.rm = T),
      .groups = "drop")
}

weighted_data <- grouped_center_bio(clean_survey, est_year, season)

centerBio_lm <- weighted_data %>%
  group_by(comname, season) %>%
  nest() %>%
  mutate(lat_mod    = map(data, function(x){lm(avg_lat ~ est_year, data = x)}),
         lon_mod    = map(data, function(x){lm(avg_lon ~ est_year, data = x)}),
         tidy_lat   = map(lat_mod, broom::tidy),
         tidy_lon   = map(lon_mod, broom::tidy),
         glance_lat = map(lat_mod, broom::glance),
         glance_lon = map(lon_mod, broom::glance),
         slope_lat  = tidy_lat %>% map_dbl(function(x) x$estimate[2]),
         slope_lon  = tidy_lon %>% map_dbl(function(x) x$estimate[2]),
         p_lat      = glance_lat %>% map_dbl("p.value"),
         p_lon      = glance_lon %>% map_dbl("p.value"))


```

```{r}
#| label: seasonal distance
#| echo: false
#| message: false
#| warning: false

library(sf)

# Turn of spherical geometry
sf::sf_use_s2(FALSE)

point_dist <- function(df){
  if(FALSE){
    df<-season_dist$data[[201]]
  }
  temp <- st_as_sf(df,coords=c("avg_lon","avg_lat"), crs=4326, remove=FALSE)
  out <-  st_distance(temp)[1,2]
  return(out)
}

season_dist <- centerBio_lm %>%
  unnest(data) %>%
  select(comname, season, est_year, avg_lat, avg_lon)%>%
  group_by(comname, est_year)%>%
  nest() %>%
  mutate(dist    = map_dbl(data, possibly(point_dist, NA)),
         dist_km = (dist/1000)) %>%
  group_by(comname) %>% 
  nest() %>%
  mutate(dist_lm = map(data, function(x){
    lm(dist_km ~ est_year, data = x) %>% 
      broom::tidy() %>% 
      filter(!term == "(Intercept)") %>%
      select(
        term,
        estimate,
        p.value) %>% 
      mutate(signif = ifelse(p.value <= 0.05, T, F))
  })) %>%
  unnest(dist_lm)


signif_dist <- season_dist %>% 
  filter(signif == "TRUE")

```

```{r}
#| label: plots 
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| fig-width: 13
#| fig-height: 12

library(rnaturalearth)

maps <- centerBio_lm %>% 
  filter(comname %in% signif_dist$comname) %>%
  select(comname, season, data) %>% 
  unnest(data) %>% 
  mutate(decade = 10*est_year %/% 10) %>% 
  group_by(comname) %>% 
  nest() %>% 
  mutate(plot = map(data, function(x,y){
    world <- ne_countries(returnclass = "sf")
    out <- ggplot(data = world) +
      geom_sf()+
      coord_sf(xlim = c(-78,-66), ylim = c(37, 47)) + 
      geom_point(data = x, aes(x = avg_lon, y = avg_lat, color = season)) +
      guides(color = guide_legend(title = "Season")) +
      scale_color_manual(values = c("lightblue", "#EA4F12")) +
      scale_y_continuous(breaks = c(38, 42, 46)) +
      scale_x_continuous(breaks = c(-74, -68)) +
      facet_wrap(~decade, nrow = 1) +
      ggtitle(str_to_sentence(comname)) +
      xlab("Longitude") + ylab("Latitude") +
      theme_gmri(strip.background = element_rect(fill = "transparent", color = "black", linewidth = 0.7),
             strip.text = element_text(color = "black"),
             legend.title = element_text(size = 15, face = "bold"),
             legend.text = element_text(size = 15),
             plot.title = element_text(size = 15, face = "bold"),
             axis.title = element_text(size = 12, face = "bold"),
             axis.text = element_text(size = 12),
             panel.border = element_rect(color = "black", linetype = 1, linewidth = 0.5))
  }))
 
gridExtra::marrangeGrob(maps$plot, layout_matrix = matrix(1:2, ncol = 1, nrow = 2, byrow= TRUE), top = NULL)
```

## Movement and overlap

Previously, we described the [movement patterns](https://carlylovas.github.io/NECC-Species-Distribution-Summaries/R/Continuing%20work%20scripts/movement.html) of roughly 40 species caught in the NEFSC Bottom Trawl survey. The movement patterns of the 8 species exhibiting the strongest changes in seasonal center of biomass, as well as 5 pre-determined prey species (silver hake is both), are described below. Prey species are noted in italics.

-   **Contract**: Goosefish

-   **Lean**: *Atlantic herring*, *Longfin squid*, *Northern sand lance*, Scup, Thorny skate, Winter skate

-   **March**: *Alewife*, Red hake, *Silver hake*, Smooth dogfish

-   **Expand**: Spiny dogfish

In our overlap analysis, we've described seven of the eight above species as predators, with silver hake representing prey species, along with alewife, Atlantic herring, longfin squid, and northern sand lance. We compare the trends of species distributions, then describe the expected relationship based on our movement matrix. We will then map the spatial intersection at the decadal time scales to see if hypothesized overlap pattern is consistent with the trawl survey results. It is likely that we will include other environmental variables, such as average depth, sea surface and bottom temperature. 

```{r}
#| label: movement matrix
#| echo: false
#| message: false

library(gt)
movement_matrix <- read_csv(here("Data", "movement_matrix.csv"))
cats <- names(movement_matrix)

gt(movement_matrix, groupname_col = NULL, rowname_col = "...1") %>%
  tab_stubhead(label = "Pred/Prey") %>%
  tab_style(
    style = cell_text(weight  = "bold"),
    locations = cells_stubhead()
  ) %>%
  tab_style(
    style = cell_text(align  = "center"),
    locations = cells_body(everything())
  ) %>%
  tab_style(
    style = list(
      cell_fill(color = '#E9E9E9')),
     locations = map( cats ,
                     \(x){cells_body(
                       columns = x,
                       rows = str_detect(!!sym(x),"= / 0")
                     )})) %>%
  tab_style(
    style = list(
      cell_fill(color = '#EACA00', alpha = 0.8)),
     locations = map( cats ,
                     \(x){cells_body(
                       columns = x,
                       rows = str_detect(!!sym(x), pattern = "- / =")
                     )})) %>%
    tab_style(
    style = list(
      cell_fill(color = '#EA4F12', alpha = 0.8)),
     locations = map( cats ,
                     \(x){cells_body(
                       columns = x,
                       rows = str_ends(!!sym(x), coll("+ / -"))
                     )})) %>%
  tab_style(
    style = list(
      cell_fill(color = '#00608A', alpha = 0.8)),
     locations = map( cats ,
                     \(x){cells_body(
                       columns = x,
                       rows = str_detect(!!sym(x), coll("+ / ="))
                     )}))%>%
  tab_style(
    style = list(
      cell_fill(color = '#ABB400', alpha = 0.8)),
     locations = map( cats ,
                     \(x){cells_body(
                       columns = x,
                       rows = str_starts(!!sym(x), coll("- / 0"))
                     )})) %>%
  tab_style(
    style = list(
      cell_fill(color = '#00736D', alpha = 0.8)),
     locations = map( cats ,
                     \(x){cells_body(
                       columns = x,
                       rows = str_starts(!!sym(x), coll("+ / - / 0"))
                     )}))

```


## Scup & Herring Example 
The map below shows the intersecting centers of biomass in decadal snapshots. We see that Scup and Atlantic herring both exhibit *leaning* distribution patterns and appear to be increasing in overlap. We will need to run a regression analysis to determine if this increase in overlap is statistically significant, supporting our previous hypothesis that predators and prey species exhibiting the same distribution patterns will have an increase in overlap.

```{r}
#| label: overlap
#| echo: false
#| message: false
#| warning: false

load("~/Documents/necc_distributions/overlap.RData")
# need to grab trends from `movement.qmd`

trends <- read_csv(here("Data", "trends.csv"))

species_list %>%
  left_join(trends) %>%
  filter(guild == "prey")  %>%
  # filter(comname %in% signif_dist$comname | guild == "prey") %>%
  select(comname, distribution) %>% 
  rename("prey_dist" = "distribution", 
         "prey" = "comname") -> prey_dist
  
species_list %>% 
  left_join(trends) %>% 
  filter(comname %in% signif_dist$comname & !comname == "silver hake") %>% 
  select(comname, distribution) %>%
  rename("pred_dist" = "distribution", 
         "pred" = "comname") -> pred_dist

overlap_area %>% 
  filter(pred %in% signif_dist$comname)  %>%  
  select(decade, pred, prey, overlap) %>%
  left_join(pred_dist) %>%
  left_join(prey_dist) %>%
  relocate("pred_dist", .after = "pred") %>%
  relocate("prey_dist", .after = "prey")-> overlap

overlap %>% 
  mutate(overlap = st_transform(overlap, crs = 4326)) %>%
  group_by(pred, prey, prey_dist, pred_dist) %>% 
  nest() %>%
  mutate(map = purrr::pmap(list(data, pred, prey, pred_dist, prey_dist), function(x,y,z,a,b){
    world <- ne_countries(returnclass = "sf")
    out <- ggplot() +
      geom_sf(data = world)+
      geom_sf(data = x, aes(geometry = overlap), color = "#00608A", alpha = 0.5) +
      coord_sf(xlim = c(-78,-64), ylim = c(35, 47)) + 
      scale_y_continuous(breaks = c(38, 42, 46)) +
      scale_x_continuous(breaks = c(-74, -68)) +
      facet_wrap(~decade, nrow = 1) +
      ggtitle(str_to_sentence(paste(pred, prey, sep = " + ")), subtitle = (paste(pred_dist, prey_dist, sep = "-"))) +
      xlab("Longitude") + ylab("Latitude") +
      theme_gmri(strip.background = element_rect(fill = "transparent", color = "black", linewidth = 0.7),
             strip.text = element_text(color = "black"),
             legend.title = element_text(size = 15, face = "bold"),
             legend.text = element_text(size = 15),
             plot.title = element_text(size = 15, face = "bold"),
             plot.subtitle = element_text(size = 13),
             axis.title = element_text(size = 12, face = "bold"),
             axis.text = element_text(size = 12),
             panel.border = element_rect(color = "black", linetype = 1, linewidth = 0.5))  
  })) -> overlap

overlap$map[[12]]
```
